class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        
        if(nums.size() < 3){
            return {};
        }
        if(nums[0] > 0){
            return {};
        }
        vector<vector<int>> ans;
        
        for(int i = 0;i < nums.size();i++){
            if(nums[i] > 0){
                break;
            }
            if(i > 0 && nums[i] == nums[i - 1]){
                continue;
            }
            
            int sum = 0;
            int left = i + 1;
            int right = nums.size() - 1;
            
            while(left < right){
                sum = nums[i] + nums[left] + nums[right];
                if(sum > 0){
                    right--;
                }
                else if(sum < 0){
                    left++;
                }
                else{
                    ans.push_back({nums[i],nums[left],nums[right]});
                    
                    int last_left = nums[left];
                    int last_right = nums[right];
                    
                    while(left < right && nums[left] == last_left){
                        left++;
                    }
                    while(left < right && nums[right] == last_right){
                        right--;
                    }
                }
            }
        }
        return ans;
    }
};
