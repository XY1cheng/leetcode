class Solution {
public:
    string longestPalindrome(string s) {
        if(s == "" || s.length() < 1){
            return {};
        }
        int start = 0;
        int end = 0;
        
        for(int i = 0;i < s.length();i++){
            int OddString = ExpendFromMiddle(s,i,i);
            int EvenString = ExpendFromMiddle(s,i,i + 1);
            int len = std::max(OddString,EvenString);
            
            if(len > end - start){
                start = i - ((len - 1) / 2);
                end = i + (len / 2);
            }
        }
        return s.substr(start,end - start + 1);
    }
    
    int ExpendFromMiddle(string s,int left,int right){
        if(s == "" && left > right){
            return 0;
        }
        while(left >= 0 && right < s.length() && s[left] == s[right]){
            left--;
            right++;
        }
        return right - left - 1;
    }
};
