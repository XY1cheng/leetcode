class Solution {
public:
    int houserober(vector<int>& nums) {
        vector<int> dp(nums.size());
        
        dp[0] = nums[0];
        dp[1] = std::max(nums[0],nums[1]);
        
        for(int i = 2;i < dp.size();i++){
            dp[i] = std::max(dp[i - 1],dp[i - 2] + nums[i]);
        }
        return dp[nums.size() - 1];
    }
    
    int rob(vector<int>& nums) {
        if(nums.size() == 1 && nums[0] == 0){
            return 0;
        }
        if(nums.size() == 1){
            return nums[0];
        }
        if(nums.size() == 2){
            return std::max(nums[0],nums[1]);
        }
        vector<int> a(nums.begin(),nums.end() - 1);
        vector<int> b(nums.begin() + 1,nums.end());
        
        return std::max(houserober(a),houserober(b));
    }
};
